/*
# hardware-configuration  -  Configuration file for setting up hardware on dekstop
# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
*/
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];

  boot = {
    # Other options are:- linuxPackages_xanmod_latest, linuxPackages_zen

    # Custom kernel packages
    kernelPackages = pkgs.linuxPackages_latest;

    kernelParams = [
      "i915.force_probe=4680" # Force the i915 driver to load for the Intel Iris Xe Graphics
      "hibernate=no" # Disable hibernation
      "intel_iommu=on" # Enable IOMMU
      "iommu=pt" # set IOMMU to passthrough mode
      "intel_idel=on" # Enable Intel Idle driver
      "intel_idle.max_cstate=0" # reduce the maximum C-state to C1  improve
      "intel_pstate=enable" # Enable Intel P-State driver
      "processor.max_cstate=0" # disable deep sleep states
      "acpi_backlight=vendor" # Fix backlight control
      "acpi_osi=Linux" # Fix backlight control
      "acpi_sleep=nonvs" # pecific kernel parameters to enable proper power
      "rd.udev.log_level=3" # Increase kernel log verbosity
      "systemd.show_status=false"
      "no_console_suspend" # Prevent consoles from being suspended
      "splash" # Show a splash screen during boot
      "logo.nologo" # Disable the Linux logo at boot
      "timer_stats=1" # Enable timer stats
    ];

    initrd.availableKernelModules = [
      "xhci_pci" # USB 3.0 (eXtensible Host Controller Interface)
      "ehci_pci" # USB 2.0 (Enhanced Host Controller Interface)
      "rtsx_pci_sdmmc" # Realtek PCI-E SD/MMC Card Host Driver
      "ahci" # SATA devices on modern AHCI controllers
      "nvme" # NVMe drives (really fast SSDs)
      "usbhid" # USB Human Interface Devices
      "usb_storage" # Utilize USB Mass Storage (USB flash drives)
      "sd_mod" # SCSI, SATA, and PATA (IDE) devices
      "sdhci_pci" # Secure Digital Host Controller Interface (SD cards)
      "virtio_blk" # Another Virtio module, enabling high-performance communication between the host and virtualized block devices (e.g., hard drives) in a virtualized environment.
      "virtio_pci" # Part of Virtio virtualization standard, it supports efficient communication between the host and virtual machines with PCI bus devices.
    ];

    initrd.kernelModules = [
      "cifs" #  implementation of the Server Message Block (SMB) protocol, is used to share file systems, printers, or serial ports over a network.
      "dm-snapshot" #  a read-only copy of the entire file system and all the files contained in the file system.
      "cryptd" # a cryptographic transform that is used to encrypt and decrypt data.
      "aesni_intel" # a cryptographic transform that is used to encrypt and decrypt data.
    ];

    kernelModules = [
      "kvm-intel" # KVM on Intel CPUs
      "coretemp" # Temperature monitoring on Intel CPUs
      "fuse" # userspace filesystem framework.
    ];
    extraModulePackages = [
      config.boot.kernelPackages.openrazer
    ];

    extraModprobeConfig = "options kvm_intel nested=1"; # for intel cpu

    supportedFilesystems = ["ntfs" "ntfs3"];
  };

  services.btrfs.autoScrub = {
    enable = true;
    interval = "weekly";
  };

  zramSwap = {
    enable = true;
    memoryPercent = 10;
    algorithm = "lz4";
  };

  powerManagement.cpuFreqGovernor = lib.mkOverride 1 "performance";
  hardware.cpu.intel.updateMicrocode = lib.mkForce config.hardware.enableRedistributableFirmware;
}
